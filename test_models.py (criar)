import unittest
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
import pandas as pd

class TestModels(unittest.TestCase):
    def setUp(self):
        data = {
            'Feature1': [1, 2, 3, 4, 5],
            'Feature2': [5, 4, 3, 2, 1],
            'Rent': [1000, 1500, 2000, 2500, 3000],
            'Date': ['2022-05-10', '2022-05-11', '2022-05-12', '2022-05-13', '2022-05-14']
        }
        self.dataset_transformado = pd.DataFrame(data)
        self.X = self.dataset_transformado.drop(columns=['Rent', 'Date'])
        self.y = self.dataset_transformado['Rent']
        self.X_train, self.X_test, self.y_train, self.y_test = train_test_split(self.X, self.y, test_size=0.2, random_state=42)

    def test_linear_regression(self):
        linear_model = LinearRegression()
        linear_model.fit(self.X_train, self.y_train)
        linear_score = linear_model.score(self.X_test, self.y_test)
        self.assertGreaterEqual(linear_score, 0.0)

    def test_random_forest(self):
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(self.X_train, self.y_train)
        rf_score = rf_model.score(self.X_test, self.y_test)
        self.assertGreaterEqual(rf_score, 0.0)

if __name__ == '__main__':
    unittest.main()